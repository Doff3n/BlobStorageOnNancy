<article>
    <p><strong>Nancy + Azure Blob storage demo</strong></p>

    <p>
        Azure has a Blob storage which is a data service for storing big amounts of unstructured data,
        such as text or binary data(images, videos etc), the data can be accessed worldwide via via HTTP or HTTPS.
        You can use Blob storage to expose data publicly to the world, or to store private data:
        <a href="http://azure.microsoft.com/en-us/documentation/services/storage/">http://azure.microsoft.com/en-us/documentation/services/storage/</a>
    </p>

    <p>
        NancyFx is a very lightweight web framework which is used in this project to serve the service
        and to provide content negotiation almost out of the box:
        <a href="http://nancyfx.org/">http://nancyfx.org/</a>
    </p>

    <p>This demo shows how to use Azure storage on NancyFx resulting in a lightweight service ontop of Azure</p>

    <p>In order to use this project you need to:</p>

    <ul>
        <li>1. Log into your Azure account and create a new storage data service</li>
        <li>
            2. Edit the ConnectionStrings.config in this project. Add your own Azure storage account
            credentials which can be found when managing keys in the newly created azure storage data service.
            The account name is the name of your storage.
        </li>
    </ul>

    <p style="white-space: pre-wrap">Example of connection string:
        <code>DefaultEndpointsProtocol=https;AccountName=storagesample;AccountKey=K0DHpt[...]beIHy5l/Yhg==</code> </p>

    <ul>
        <li>3. Build and run the web application</li>
        <li>
            4. Create containers dynamically:
            http://localhost:65260/document/{containername}
        </li>
    </ul>

    <p>
        Content negotiation on containers and base path/document:
        http://localhost:65260/document/{containername}.json
        http://localhost:65260/document.xml
    </p>

    <p>
        Uploading of files can be done via http Post to:
        http://localhost:65260/documents/upload/{container}
    </p>
</article>

<ul>
    <li>
        5. Once everything is up and running you can view your Azure containers here:
        <a href="~/documents/">Documents</a>
    </li>
</ul>


    